// -- https://xemantic.github.io/shader-web-background/
const shaderWebBackground={};(()=>{'use strict';function p(a,b){if(!a)throw new shaderWebBackground.ConfigError(b);}function r(a){p(a instanceof HTMLCanvasElement,"config.canvas must be instance of canvas");return a}function t(){const a=document.createElement("canvas"),b=a.style;a.id="shader-web-background";b.width="100vw";b.height="100vh";b.position="fixed";b.top="0";b.left="0";b.zIndex=-9999;return a}const u=a=>'<script type="x-shader/x-fragment" id="'+a+'">';
function v(a){const b=document.getElementById(a);p(b,"Missing shader source: "+u(a));p(b instanceof HTMLScriptElement&&"x-shader/x-fragment"===b.type,'Shader source element of id "'+a+'" should be of type: '+u(a));return b.text.trim()}function w(a,b){"loading"!==document.readyState?b():window.addEventListener(a,b)}
function x(a,b,e,c,d){const h=new y(a,g=>new shaderWebBackground.GlError(g)),l=[],m=Object.keys(b).length-1;let k=0;for(const g in b)l.push(z(h,g,A(h,g,v(g)),b[g].uniforms||{},k++<m));a.width=0;a.height=0;const q=()=>{if(a.width!==a.clientWidth||a.height!==a.clientHeight){const g=a.clientWidth,n=a.clientHeight;a.width=g;a.height=n;h.a.viewport(0,0,h.canvas.width,h.canvas.height);e&&e(g,n);l.forEach(f=>{f.a&&(f=f.a,f.b&&f.c.deleteTexture(f.b),f.a&&f.c.deleteTexture(f.a),f.b=B(f,g,n),f.a=B(f,g,n))})}c&&
c();l.forEach(g=>C(g,()=>{{var n=g.h;const f=h.a;f.bindBuffer(f.ARRAY_BUFFER,h.f);f.enableVertexAttribArray(n);f.vertexAttribPointer(n,2,f.FLOAT,!1,0,0);f.drawArrays(f.TRIANGLE_STRIP,0,4);f.disableVertexAttribArray(n);f.bindBuffer(f.ARRAY_BUFFER,null)}}));l.forEach(g=>{if(g.a){{g=g.a;const n=g.a;g.a=g.b;g.b=n}}});d&&d();requestAnimationFrame(q)};w("load",()=>requestAnimationFrame(q))}shaderWebBackground.ConfigError=class extends Error{constructor(a){super(a);this.name="shaderWebBackground.ConfigError"}};
shaderWebBackground.GlError=class extends Error{constructor(a){super(a);this.name="shaderWebBackground.GlError"}};
shaderWebBackground.shade=function(a){p(a,"Missing config argument");const b=a.canvas?r(a.canvas):t();p(a.shaders,"No shaders specified in config");try{x(b,a.shaders,a.onResize,a.onBeforeFrame,a.onFrameComplete)}catch(e){if(a.fallback&&e instanceof shaderWebBackground.GlError)console.log("Could not load shaders, adding fallback class to canvas"+e),b.classList.add("fallback");else throw e;}a.canvas||w("DOMContentLoaded",()=>document.body.appendChild(b))};const D=[-1,1,1,1,-1,-1,1,-1];function E(a,b){return a.f(a.a.getExtension(b),b+" extension is not supported")}class F{constructor(a,b){this.a=a;this.f=b}b(){}}class G extends F{constructor(a,b){super(a,b);this.c=E(this,"OES_texture_half_float");E(this,"OES_texture_half_float_linear")}b(a,b){const e=this.a;e.texImage2D(e.TEXTURE_2D,0,e.RGBA,a,b,0,e.RGBA,this.c.HALF_FLOAT_OES,null)}}
class H extends F{constructor(a,b){super(a,b);E(this,"EXT_color_buffer_float")}b(a,b){const e=this.a;e.texImage2D(e.TEXTURE_2D,0,e.RGBA16F,a,b,0,e.RGBA,e.FLOAT,null)}}
function z(a,b,e,c,d){const h=a.a;a.uniforms={};const l=h.getProgramParameter(e,h.ACTIVE_UNIFORMS);for(let m=0;m<l;m++){const k=h.getActiveUniform(e,m),q=c[k.name];if(!q)throw a.b('No configuration for uniform "'+k.name+'" defined in shader "'+b+'"');a.uniforms[k.name]={location:h.getUniformLocation(e,k.name),i:q}}for(const m in c)if(!(m in a.uniforms))throw a.b('No such uniform "'+m+'" defined in shader "'+b+'" - if unused it might be removed by GLSL compiler');c=null;d&&(c=new I(h,a.c),a.buffers[b]=
c);return new J(h,b,e,h.getAttribLocation(e,"V"),a.uniforms,c,a.buffers)}function A(a,b,e){const c=a.a,d=K(a,b,c.VERTEX_SHADER,"attribute vec2 V;void main(){gl_Position=vec4(V,0,1);}");a=K(a,b,c.FRAGMENT_SHADER,e);b=c.createProgram();c.attachShader(b,d);c.attachShader(b,a);c.linkProgram(b);return b}
function K(a,b,e,c){const d=a.a;e=d.createShader(e);d.shaderSource(e,c);d.compileShader(e);if(!d.getShaderParameter(e,d.COMPILE_STATUS)){const h=String(d.getShaderInfoLog(e));d.deleteShader(e);b="Cannot compile shader - "+b+": "+h.trim();console.log(b+"\n"+c);throw a.b(b);}return e}
class y{constructor(a,b){var e={antialias:!1,depth:!1,alpha:!1};this.canvas=a;this.b=b;const c=(h,l)=>{if(!h)throw b(l);return h};let d=a.getContext("webgl2",e);if(d)this.c=new H(d,c);else if(d=a.getContext("webgl",e))this.c=new G(d,c);c(d,"webgl context not supported on supplied canvas element: "+a);this.a=d;a=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,a);d.bufferData(d.ARRAY_BUFFER,new Float32Array(D),d.STATIC_DRAW);d.bindBuffer(d.ARRAY_BUFFER,null);this.f=a;this.buffers={}}}
function C(a,b){const e=a.f;e.useProgram(a.g);for(var c in a.uniforms){var d=a.uniforms[c];d.i(e,d.location,a.c)}a.a?(c=a.a,d=c.c,d.bindFramebuffer(d.FRAMEBUFFER,c.g),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,c.a,0),b(),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,null,0),d.bindFramebuffer(d.FRAMEBUFFER,null)):b();for(b=0;b<a.b;b++)e.activeTexture(e.TEXTURE0+b),e.bindTexture(e.TEXTURE_2D,null);a.b=0}
class J{constructor(a,b,e,c,d,h,l){this.f=a;this.id=b;this.g=e;this.h=c;this.uniforms=d;this.a=h;this.b=0;this.c={buffers:l,texture:(m,k)=>{k=k instanceof I?k===this.a?k.b:k.a:k;a.activeTexture(a.TEXTURE0+this.b);a.bindTexture(a.TEXTURE_2D,k);a.uniform1i(m,this.b++)}}}}
function B(a,b,e){const c=a.c,d=c.createTexture();c.bindTexture(c.TEXTURE_2D,d);a.f.b(b,e);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.bindTexture(c.TEXTURE_2D,null);return d}class I{constructor(a,b){this.g=a.createFramebuffer();this.c=a;this.f=b;this.a=this.b=null}};})()
//# sourceMappingURL=shader-web-background.min.js.map
